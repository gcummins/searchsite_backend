<?php

// Generic, multi-purpose functions

function getTask()
{
	if (isset($_REQUEST['task']) && !empty($_REQUEST['task']))
	{
		return mysql_real_escape_string($_REQUEST['task']);
	}
	else
	{
		return false;
	}
}

function logger($message, $level)
{
	// TODO: Finish function, enable logging.
	returnError(800, $message . " (Log Level: $level)", false);
}

function predump($iArray, $force=false)
{
	// Display the contents of an array is an
	// easy-to-read manner
	
	if ($force || ADMINPANEL_DEBUG) // Only display if specifically forced, or if we are in debugging mode.
	{
		echo "<pre>";
		print_r($iArray);
		echo "</pre>";
	}
}

function returnToMainPage($startPage=null, $startRecord=null)
{
	// Perform this redirect to prevent users from resubmitting data
	// upon page refresh
	global $module;
	
	// Ensure that all session variables are written before the redirect is accomplished
	session_write_close();
	
	// Redirect the user
	$link = ADMIN_PATH . "?module=$module";
	if (!empty($startPage) && is_int($startPage))
	{
		$link .= "&paging_spage=" . (int)$startPage;
	}
	if (!empty($startRecord) && is_int($startRecord))
	{
		$link .= "&paging_startrec=" . (int)$startRecord;
	}
	?>
	<script type="text/javascript">
	location.href="<?php echo $link; ?>";
	</script>
	<?php	
}

function getStartPage()
{
	if (isset($_REQUEST['paging_spage']))
	{
		return (int)$_REQUEST['paging_spage'];
	}
	else
	{
		return 1;
	}
}

function getModuleName($moduleId, $requestType=null)
{
	// Look up the provided module ID in the database
	// and return the associated name
	
	global $adminLink;
	
	$query = "SELECT `name` FROM `modules` WHERE `id`=$moduleId LIMIT 1;";
	if (false === ($result = mysql_query($query, $adminLink)))
	{
		if ($requestType == 'ajax')
		{
			returnError(902, $query, true, $adminLink, $requestType);
			return false;
		}
		else
		{
			returnError(902, $query, false, $adminLink);
		}
	}
	
	if (mysql_num_rows($result))
	{
		$row = mysql_fetch_object($result);
		return $row->name;
	}
	else
	{
		return false;
	}
}

function validate_mysql_username($dbUsername)
{
	/*
	 * MySQL usernames must meet the following criteria
	 *  - Must be at most 16 characters in length
	 *  - May contain only alphanumeric characters and an underscore
	 *  - Must begin with a letter
	 */
	
	if (strlen($dbUsername) > 16)
	{
		return false;
	}
	
	if (eregi('[^a-z0-9_]', $dbUsername))
	{
		return false;
	}
	else
	{
		if (eregi('[A-Za-z]+', substr($dbUsername,0, 1)))
		{
			return true;
		}
		else
		{
			return false;
		}
	}
}

function validate_mysql_db_name($dbName)
{
	/*
	 * Database names must meet the following critera:
	 *  - Must be at most 64 bytes in length
	 *  - May contain only alphanumeric characters and an underscore
	 *  - Must begin with a letter
	 */
	 
	if (function_exists('mb_strlen'))
	{
		if (mb_strlen($dbName) > 64)
		{
			return false;
		}
	}
	else if (strlen($dbName) > 64)
	{
		return false;
	} 
	
	if (eregi('[^a-z0-9_]', $dbName))
	{
		return false;
	}
	else
	{
		if (eregi('[A-Za-z]+', substr($dbName,0, 1)))
		{
			return true;
		}
		else
		{
			return false;
		}
	}
}
?>